@model CatalogProductsModel

<script src="~/js/public.catalogproducts.js" asp-location="Footer"></script>

<div class="products-container">
    @* <div class="ajax-products-busy"></div> *@
    <div class="products-wrapper">
        @await Html.PartialAsync("_ProductsInGridOrLines", Model)
    </div>
</div>
<script asp-location="Footer">
    $(document).ready(function () {
        CatalogProducts.init({
            ajax: @Model.UseAjaxLoading.ToString().ToLowerInvariant(),
            browserPath: '@Context.Request.Path',
            fetchUrl: '@ViewData["fetchUrl"]'
        });

        addPagerHandlers();
        $(CatalogProducts).on('loaded', function () {
            addPagerHandlers();
        });
    });

    function addPagerHandlers() {
        $('[data-page]').on('click', function (e) {
            e.preventDefault();
            CatalogProducts.getProducts($(this).data('page'));
            var start = (($(this).data('page') - 1) * @Model.PageSize) + 1;
            var end = Math.min(start + @(Model.PageSize - 1), @Model.TotalItems);
            $(".total-result").html("<span>Showing " + start + " – " + end + " of @Model.TotalItems results</span>");
            return false;
        });
    }
</script>