@inject CommonSettings commonSettings
@model PopularProductTagsModel
@{
    Layout = "_ColumnsTwo";

    //title
    NopHtml.AddTitleParts(T("PageTitle.AllProductTags").Text);
    //page class
    NopHtml.AppendPageCssClassParts("html-product-tags-all-page");

    var breadcrumbDelimiter = commonSettings.BreadcrumbDelimiter;
}
@section Breadcrumb
{
    <div class="breadcrumb">
        <ul itemscope itemtype="http://schema.org/BreadcrumbList">
            <li>
                <a href="@Url.RouteUrl("Homepage")" title="@T("Categories.Breadcrumb.Top")">@T("Categories.Breadcrumb.Top")</a>
                <span class="delimiter">@breadcrumbDelimiter</span>
            </li>
            <li>
                <h1> @T("Products.Tags.All") </h1>
            </li>
        </ul>
    </div>
    @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.CategoryDetailsAfterBreadcrumb, additionalData = Model })
}
<div class="page product-tags-all-page">
@*    <div class="page-title">
        <h1>@T("Products.Tags.All")</h1>
    </div>*@
    <div class="page-body">
        @if (Model.Tags.Count > 0)
        {
            <ul class="product-tags-list">
                @foreach (var item in Model.Tags)
                {
                    <li>
                        <a href="@Url.RouteUrl("ProductsByTag", new { item.SeName })" class="producttag" style="font-size:@(Model.GetFontSize(item))%;">
                        @item.Name</a>
                    </li>
                }
            </ul>
        }
    </div>
</div>
